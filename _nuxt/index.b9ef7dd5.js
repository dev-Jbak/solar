import{j as w,k as y,l as m,m as P,p as v,w as C,u as D,q as k,s as B,b as O,h as x,t as E,o as M,v as j}from"./entry.1355787e.js";const R=()=>null;function z(...i){var h;const c=typeof i[i.length-1]=="string"?i.pop():void 0;typeof i[0]!="string"&&i.unshift(c);let[e,l,a={}]=i;if(typeof e!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof l!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");a.server=a.server??!0,a.default=a.default??R,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0;const t=w(),f=()=>t.isHydrating?t.payload.data[e]:t.static.data[e],d=()=>f()!==void 0;t._asyncData[e]||(t._asyncData[e]={data:y(f()??((h=a.default)==null?void 0:h.call(a))??null),pending:y(!d()),error:y(t.payload._errors[e]?m(t.payload._errors[e]):null)});const n={...t._asyncData[e]};n.refresh=n.execute=(r={})=>{if(t._asyncDataPromises[e]){if(r.dedupe===!1)return t._asyncDataPromises[e];t._asyncDataPromises[e].cancelled=!0}if(r._initial&&d())return f();n.pending.value=!0;const u=new Promise((s,o)=>{try{s(l(t))}catch(b){o(b)}}).then(s=>{if(u.cancelled)return t._asyncDataPromises[e];let o=s;a.transform&&(o=a.transform(s)),a.pick&&(o=A(o,a.pick)),n.data.value=o,n.error.value=null}).catch(s=>{var o;if(u.cancelled)return t._asyncDataPromises[e];n.error.value=s,n.data.value=D(((o=a.default)==null?void 0:o.call(a))??null)}).finally(()=>{u.cancelled||(n.pending.value=!1,t.payload.data[e]=n.data.value,n.error.value&&(t.payload._errors[e]=m(n.error.value)),delete t._asyncDataPromises[e])});return t._asyncDataPromises[e]=u,t._asyncDataPromises[e]};const p=()=>n.refresh({_initial:!0}),g=a.server!==!1&&t.payload.serverRendered;{const r=k();if(r&&!r._nuxtOnBeforeMountCbs){r._nuxtOnBeforeMountCbs=[];const s=r._nuxtOnBeforeMountCbs;r&&(P(()=>{s.forEach(o=>{o()}),s.splice(0,s.length)}),v(()=>s.splice(0,s.length)))}g&&t.isHydrating&&d()?n.pending.value=!1:r&&(t.payload.serverRendered&&t.isHydrating||a.lazy)&&a.immediate?r._nuxtOnBeforeMountCbs.push(p):a.immediate&&p(),a.watch&&C(a.watch,()=>n.refresh());const u=t.hook("app:data:refresh",s=>{if(!s||s.includes(e))return n.refresh()});r&&v(u)}const _=Promise.resolve(t._asyncDataPromises[e]).then(()=>n);return Object.assign(_,n),_}function A(i,c){const e={};for(const l of c)e[l]=i[l];return e}const H={class:"m-6 flex flex-col gap-6"},N=x("h1",null,"Dashboard",-1),S={class:"text-xl"},U={__name:"index",async setup(i){let c,e;const l=j(),a=([c,e]=B(()=>z("data",()=>$fetch("/data.json",{baseURL:l.public.apiBase}))),c=await c,e(),c);return(t,f)=>(M(),O("div",H,[N,x("div",S," text: "+E(D(a)),1)]))}};export{U as default};
