import{j as w,k as y,l as m,m as P,p as D,w as k,u as v,q as B,s as C,b as O,h as x,t as E,o as M}from"./entry.4316ea28.js";const j=()=>null;function R(...i){var p;const c=typeof i[i.length-1]=="string"?i.pop():void 0;typeof i[0]!="string"&&i.unshift(c);let[a,l,e={}]=i;if(typeof a!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof l!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");e.server=e.server??!0,e.default=e.default??j,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0;const t=w(),f=()=>t.isHydrating?t.payload.data[a]:t.static.data[a],d=()=>f()!==void 0;t._asyncData[a]||(t._asyncData[a]={data:y(f()??((p=e.default)==null?void 0:p.call(e))??null),pending:y(!d()),error:y(t.payload._errors[a]?m(t.payload._errors[a]):null)});const n={...t._asyncData[a]};n.refresh=n.execute=(s={})=>{if(t._asyncDataPromises[a]){if(s.dedupe===!1)return t._asyncDataPromises[a];t._asyncDataPromises[a].cancelled=!0}if(s._initial&&d())return f();n.pending.value=!0;const u=new Promise((r,o)=>{try{r(l(t))}catch(b){o(b)}}).then(r=>{if(u.cancelled)return t._asyncDataPromises[a];let o=r;e.transform&&(o=e.transform(r)),e.pick&&(o=z(o,e.pick)),n.data.value=o,n.error.value=null}).catch(r=>{var o;if(u.cancelled)return t._asyncDataPromises[a];n.error.value=r,n.data.value=v(((o=e.default)==null?void 0:o.call(e))??null)}).finally(()=>{u.cancelled||(n.pending.value=!1,t.payload.data[a]=n.data.value,n.error.value&&(t.payload._errors[a]=m(n.error.value)),delete t._asyncDataPromises[a])});return t._asyncDataPromises[a]=u,t._asyncDataPromises[a]};const _=()=>n.refresh({_initial:!0}),g=e.server!==!1&&t.payload.serverRendered;{const s=B();if(s&&!s._nuxtOnBeforeMountCbs){s._nuxtOnBeforeMountCbs=[];const r=s._nuxtOnBeforeMountCbs;s&&(P(()=>{r.forEach(o=>{o()}),r.splice(0,r.length)}),D(()=>r.splice(0,r.length)))}g&&t.isHydrating&&d()?n.pending.value=!1:s&&(t.payload.serverRendered&&t.isHydrating||e.lazy)&&e.immediate?s._nuxtOnBeforeMountCbs.push(_):e.immediate&&_(),e.watch&&k(e.watch,()=>n.refresh());const u=t.hook("app:data:refresh",r=>{if(!r||r.includes(a))return n.refresh()});s&&D(u)}const h=Promise.resolve(t._asyncDataPromises[a]).then(()=>n);return Object.assign(h,n),h}function z(i,c){const a={};for(const l of c)a[l]=i[l];return a}const A={class:"m-6 flex flex-col gap-6"},H=x("h1",null,"Dashboard",-1),U={class:"text-xl"},N={__name:"index",async setup(i){let c,a;const l=([c,a]=C(()=>R("data",e=>$fetch("data.json",{baseURL:e.baseURL}))),c=await c,a(),c);return(e,t)=>(M(),O("div",A,[H,x("div",U," text: "+E(v(l)),1)]))}};export{N as default};
